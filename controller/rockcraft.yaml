# Based on https://github.com/kserve/kserve/blob/v0.14.1/Dockerfile
name: kserve-controller
summary: KServe controller
description: "KServe controller manager"
version: "0.14.1"
license: Apache-2.0
base: ubuntu@22.04
platforms:
    amd64:
run-user: _daemon_

services:
  kserve-controller:
    override: replace
    summary: "KServe controller manager service"
    startup: enabled
    command: "/manager"

parts:
  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
      dpkg-query --root=${CRAFT_PROJECT_DIR}/../bundles/ubuntu-22.04/rootfs/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
      > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query

  controller:
    plugin: go
    source: https://github.com/kserve/kserve
    source-type: git
    source-tag: v0.14.1
    build-snaps:
      - go/1.22/stable
    build-environment:
      - CGO_ENABLED: "0"
      - GOOS: linux
    override-build: |
      # Patch ReadOnlyRootFilesystem when creating the router Deployment, so that
      # the container will have a writable file system.
      # More details in https://github.com/canonical/kserve-operators/issues/328.
      # Remove once pebble won't need to always write some state to disk
      # https://github.com/canonical/pebble/issues/462.
      sed -i \
          's#ReadOnlyRootFilesystem:   proto.Bool(true)#ReadOnlyRootFilesystem:   proto.Bool(false)#' \
          pkg/controller/v1alpha1/inferencegraph/knative_reconciler.go \
          pkg/controller/v1alpha1/inferencegraph/raw_ig.go

      go mod download

      # Build
      go build -a -o manager ./cmd/manager

      # Copy the files to the install directory
      cp -r $CRAFT_PART_SRC/third_party/ $CRAFT_PART_INSTALL/third_party/
      cp -r manager $CRAFT_PART_INSTALL/manager
