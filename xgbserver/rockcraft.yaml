# Based on https://github.com/kserve/kserve/blob/v0.15.2/python/xgb.Dockerfile
# 
# See ../CONTRIBUTING.md for more details about the patterns used in this rock. 
# This rock is implemented with some atypical patterns due to the native of the upstream
# Dockerfile.
name: xgbserver
summary: xgboost server for Kserve deployments
description: "Kserve xgboost server"
version: "0.15.2"
license: Apache-2.0
base: ubuntu@22.04
platforms:
    amd64:
run-user: _daemon_
services:
  xgbserver:
    override: replace
    summary: "xgbserver server service"
    startup: enabled
    command: "python -m xgbserver [ dummy arguments ]"
entrypoint-service: xgbserver

parts:
  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
      dpkg-query --root=${CRAFT_PROJECT_DIR}/../bundles/ubuntu-22.04/rootfs/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
      > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query

  python:
    plugin: nil
    source: https://github.com/kserve/kserve.git
    source-subdir: python
    source-tag: v0.15.2
    build-packages:
      - python3.11
      - python3.11-venv
    overlay-packages:
      - python3.11
    override-build: |
      # Ensure Python 3.11 is the default version
      update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
      update-alternatives --set python3 /usr/bin/python3.11
      
      # Setup poetry
      python3 -m pip install --upgrade pip setuptools poetry==1.8.3
      poetry config virtualenvs.create false 

      # Install the kserve package, this specific server package, and their dependencies.
      mkdir -p ./python_env_builddir
      cp -rf $CRAFT_PROJECT_DIR/dummy_pyproject.toml ./python_env_builddir/pyproject.toml
      (cd python_env_builddir && poetry install --no-interaction --no-root)

      # Promote the packages we've installed from the local env to the primed image
      mkdir -p $CRAFT_PART_INSTALL/usr/local/lib/python3.11/dist-packages
      cp -fr /usr/local/lib/python3.11/dist-packages/* $CRAFT_PART_INSTALL/usr/local/lib/python3.11/dist-packages/

      # Ensure `python` is an executable command in our primed image by making
      # a symbolic link
      mkdir -p $CRAFT_PART_INSTALL/usr/bin/
      ln -s /usr/bin/python3.11 $CRAFT_PART_INSTALL/usr/bin/python

  # Generate third party licenses
  third-party:
    plugin: nil
    after: [python]
    source: https://github.com/kserve/kserve.git
    source-subdir: python
    source-tag: v0.15.2
    override-build: |
      cd python
      cp third_party/pip-licenses.py pip-licenses.py
      pip install --no-cache-dir tomli
      mkdir -p third_party/library && python3 pip-licenses.py
      mkdir -p ${CRAFT_PART_INSTALL}/third_party
      cp -fr third_party/* ${CRAFT_PART_INSTALL}/third_party

