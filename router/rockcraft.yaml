# Based on https://github.com/kserve/kserve/blob/v0.15.2/router.Dockerfile
name: kserve-router
summary: KServe Router
description: "KServe Router"
version: "0.15.2"
license: Apache-2.0
base: ubuntu@22.04
run-user: _daemon_

platforms:
    amd64:

entrypoint-service: kserve-router
services:
  kserve-router:
    override: replace
    summary: "KServe router service"
    startup: enabled
    command: "/ko-app/router [ dummy-arguments ]"


parts:
  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
      dpkg-query --root=${CRAFT_PROJECT_DIR}/../bundles/ubuntu-22.04/rootfs/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
      > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query

  router:
    plugin: go
    source: https://github.com/kserve/kserve
    source-type: git
    source-tag: v0.15.2
    build-snaps:
      - go/1.24/stable
    build-environment:
      - CGO_ENABLED: 0
      - GOOS: linux
    override-build: |
      # Empty the build directory and copy the build files that are
      # specified in the upstream Dockerfile.
      rm -rf ./*

      # Copy in the go src
      cp $CRAFT_PART_SRC/go.mod $CRAFT_PART_SRC/go.sum ./

      go mod download

      cp -r $CRAFT_PART_SRC/cmd ./cmd
      cp -r $CRAFT_PART_SRC/pkg ./pkg

      # Build
      go build -a -o router ./cmd/router

      # Generate third-party licenses
      cp -r $CRAFT_PART_SRC/LICENSE ./LICENSE
      go install github.com/google/go-licenses@latest
      $GOBIN/go-licenses check ./cmd/... ./pkg/... --disallowed_types="forbidden,unknown"
      $GOBIN/go-licenses save --save_path third_party/library ./cmd/router
      
      # Copy the files to the install directory
      mkdir $CRAFT_PART_INSTALL/third_party
      cp -r third_party $CRAFT_PART_INSTALL/third_party/
      mkdir $CRAFT_PART_INSTALL/ko-app
      cp -r router $CRAFT_PART_INSTALL/ko-app/router
